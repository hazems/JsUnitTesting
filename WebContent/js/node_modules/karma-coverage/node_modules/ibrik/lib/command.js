// Generated by CoffeeScript 2.0.0-beta9-dev
void function () {
  var argv, c, command, COMMANDS, fs, optimist, possibilities, TAB;
  fs = require('fs');
  optimist = require('optimist');
  COMMANDS = [
    'cover',
    'report'
  ];
  TAB = '        ';
  argv = optimist.usage('Usage: $0 subcommand\n=== subcommands ===\n' + TAB + COMMANDS.join('\n' + TAB) + '').argv;
  command = argv._[0];
  if (!(null != command)) {
    optimist.showHelp();
    process.exit(0);
  }
  if (!in$(command, COMMANDS)) {
    possibilities = function (accum$) {
      for (var i$ = 0, length$ = COMMANDS.length; i$ < length$; ++i$) {
        c = COMMANDS[i$];
        if (!(command === c.slice(0, command.length)))
          continue;
        accum$.push(c);
      }
      return accum$;
    }.call(this, []);
    switch (possibilities.length) {
    case 0:
      console.error('Unrecognised command: `' + command + '`. Run `' + argv.$0 + '` for help.');
      process.exit(1);
      break;
    case 1:
      command = possibilities[0];
      break;
    default: {
        console.error('Ambiguous command `' + command + '` matches `' + possibilities.join('`, `') + '`');
        process.exit(1);
      }
    }
  }
  require('./' + command)(argv, function (err) {
    if (err) {
      console.error(err);
      process.exit(1);
    }
    return process.exit(0);
  });
  function in$(member, list) {
    for (var i = 0, length = list.length; i < length; ++i)
      if (i in list && list[i] === member)
        return true;
    return false;
  }
}.call(this);
